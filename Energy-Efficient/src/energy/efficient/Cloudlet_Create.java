/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package energy.efficient;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import org.cloudbus.cloudsim.Cloudlet;
import org.cloudbus.cloudsim.DatacenterBroker;
import org.cloudbus.cloudsim.UtilizationModel;
import org.cloudbus.cloudsim.UtilizationModelFull;
import org.cloudbus.cloudsim.Vm;

/**
 *
 * @author EGC
 */
public class Cloudlet_Create extends javax.swing.JFrame {

     public static String str,str1;
    int d;
    public int nofVm, nofCloudlets;
    public static ArrayList<Vm> vmlist = new ArrayList<Vm>();
    public static ArrayList cloudletList=new ArrayList();
    public static DatacenterBroker[] broker = Broker_Center.bId;
    public static ArrayList vDetails = new ArrayList();
    public int pesNumber = 1;
    public static  Vm vm1;
    public static ArrayList cloudlet_prty=new ArrayList();
    public static ArrayList cDetails = new ArrayList();
    public static ArrayList vmload=new ArrayList();
    public static ArrayList antpool=new ArrayList();
    public static ArrayList vid = new ArrayList();
    public static ArrayList cid = new ArrayList();
    public static ArrayList vmsLoad1 =new ArrayList();
    public static ArrayList vidl=new ArrayList();
    public static ArrayList vbwl=new ArrayList();
    public static ArrayList vraml=new ArrayList();
    public static ArrayList vmipl=new ArrayList();
    public static ArrayList vl=new ArrayList();
    public static ArrayList vd=new ArrayList();
    public static ArrayList vla=new ArrayList();
    public static ArrayList antpool1=new ArrayList();
    public static ArrayList kk1=new ArrayList();
    private int status;
    public static ArrayList kk=new ArrayList();  
    public static ArrayList clid=new ArrayList();
    public static ArrayList clln=new ArrayList();
    public static ArrayList clfs=new ArrayList();
    public static ArrayList clos=new ArrayList();
    public static ArrayList ft=new ArrayList();
    public static ArrayList at=new ArrayList();
    public static ArrayList wt=new ArrayList();
    public static ArrayList et=new ArrayList();
    public static ArrayList rd=new ArrayList();
    public static ArrayList cl=new ArrayList();
    public static ArrayList pre=new ArrayList();
    public static ArrayList prty=new ArrayList();
        public static ArrayList mip=new ArrayList();
        public static ArrayList bid=new ArrayList();
    public static long startTime; 
        public static long endtime;
        
    public Cloudlet_Create() {
        initComponents();
        
        try{
           Class.forName("com.mysql.jdbc.Driver").newInstance();
             Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/?","root","");
//             String sql="CREATE DATABASE aco";
//             String sql1="Drop database if exists aco";
//             PreparedStatement s=con.prepareStatement(sql);
//             PreparedStatement s1=con.prepareStatement(sql1);
//             s1.executeUpdate();
//             s.executeUpdate();
        }
        catch(Exception ex)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cloudlet = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel1.setText("Energy-Efficient Many-Objective Virtual Machine Placement Optimization in a Cloud Computing Environment");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 10, 750, 50);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NextButton2.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(680, 390, 100, 110);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel3.setText("Cloudlet");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(70, 20, 56, 32);

        cloudlet.setEditable(false);
        cloudlet.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        jPanel3.add(cloudlet);
        cloudlet.setBounds(188, 20, 190, 30);

        jButton3.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jButton3.setText("Cloudlet");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(400, 20, 100, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(180, 120, 520, 70);

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        textarea2.setEditable(false);
        textarea2.setColumns(20);
        textarea2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        textarea2.setRows(5);
        textarea2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cloudlet", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N
        jScrollPane2.setViewportView(textarea2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(150, 230, 520, 280);

        jPanel4.setBackground(new java.awt.Color(240, 157, 234));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 0, 790, 80);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Azure_virtual_machines_icon.png"))); // NOI18N
        jLabel5.setText("jLabel3");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(0, 90, 160, 130);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        new Table_Load().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            endtime=new Date().getTime();

            //             JOptionPane.showMessageDialog(this, "success");

            Connection con1=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
            Statement stmt=con1.createStatement();

            stmt.executeUpdate("DROP TABLE IF EXISTS cloud_pre");
            //      stmt.executeUpdate("DROP TABLE IF EXISTS vload");
            String create="create table cloud_pre(cloud_id varchar(50),weight int(50))";
            stmt.executeUpdate(create);
            //      JOptionPane.showMessageDialog(this,"success");

            str = JOptionPane.showInputDialog(this, "Enter Number Of Cloudlets");
            nofCloudlets = Integer.parseInt(str);
            cloudlet.setText(nofCloudlets + " ");
            //        String str1= JOptionPane.showInputDialog(this,"Enter Number Of Users");
            //        int nofUsers=Integer.parseInt(str1);

            cloudletList = new ArrayList<Cloudlet>();
            Random r = new Random();
            Random r1 = new Random();
            Random r2 = new Random();
            Random r3 = new Random();
            int b;//=r.nextInt(broker.length);
            int brokerId;
            int l, f, o;

            ArrayList cList = new ArrayList();

            DatacenterBroker sBroker;
            int id;
            long length;
            long fileSize;
            long outputSize;
            for (int i = 0; i < nofCloudlets; i++) {
                //            do {
                    l = r1.nextInt(500);
                    //            } while (l < 30000);
                //            do {
                    f = r2.nextInt(500);
                    //            } while (l < 300);
                //            do {
                    pesNumber = r3.nextInt(4);
                    //            } while (pesNumber < 1);
                length = (long) l;
                fileSize = (long) f;
                outputSize = (long) f;
                b = r.nextInt(broker.length);
                id = i;
                brokerId = broker[b].getId();
                UtilizationModel utilizationModel = new UtilizationModelFull();
                Cloudlet cloudlet1 = new Cloudlet(id, length, pesNumber, fileSize, outputSize, utilizationModel, utilizationModel, utilizationModel);
                cloudlet1.setUserId(brokerId);
                cid.add(id);
                cDetails.add(id + "\t" + brokerId + "\t" + length + "\t" + fileSize + "\t" + outputSize + "\t\n\n");
                //            System.out.println("id : " + id);

                pre.add(length+fileSize+outputSize);
                sBroker = broker[b];
                clid.add(id);
                clln.add(length);
                clfs.add(fileSize);
                clos.add(outputSize);

                cList.add(cloudlet1);
                cloudletList.add(cloudlet1);
                ft.add(cloudlet1.getFinishTime());
                at.add(cloudlet1.getActualCPUTime());
                wt.add(cloudlet1.getWaitingTime());

                rd.add(cloudlet1.getResourceId());
                cl.add(cloudlet1.getCloudletStatus());
                sBroker.submitCloudletList(cList);
                cList.clear();

                et.add(cloudlet1.getExecStartTime());

            }
            //        System.out.println("hai");
            JOptionPane.showMessageDialog(null, nofCloudlets + " cloudlets created successfully");
            textarea2.append("Cloudlet Id" + "\t" + "Broker Id" + "\t" + "Length" + " \t" + "fileSize" + "\t" + "outputSize" + "\n\n");
            textarea2.append("====================================================================\n\n");

            for (int i = 0; i < cDetails.size(); i++)
            {
                textarea2.append(cDetails.get(i).toString() + "\n");

            }
            //        PreparedStatement sf=con1.prepareStatement("insert into cloud_pre(cloud_id,weight)values(?,?)");
            for(int n=0;n<pre.size();n++)
            {
                System.out.println("cloud_let"+cid.get(n)+"\t"+pre.get(n));
                stmt.executeUpdate("insert into cloud_pre values('"+"cloudlet_"+cid.get(n)+"','"+pre.get(n)+"')");
                prty.add(pre.get(n)+"\t"+"cloud_let"+cid.get(n));
                //
                //            sf.setString(1,"cloud_let"+cid.get(n));
                //            sf.setInt(2, (int) pre.get(n));

            }
            String df="drop table if exist cloud_pre1";
            //      String create1="create table cloud_pre1 as select * from cloud_pre order by weight desc";
            //      SELECT @n := @n + 1 n,oid,sub_cat FROM sort_plms, (SELECT @n := 0) m ORDER BY oid, sub_cat
            //      stmt.executeUpdate(df);
            //      cloud_id varchar(50),weight int(50)
            String create1="create table cloud_pre1 as select cloud_id,weight,@n := @n + 1 n from cloud_pre,(SELECT @n := 0) m order by weight desc";
            stmt.executeUpdate(create1);

            //        sf.executeUpdate();
            //           JOptionPane.showMessageDialog(this, "success");
            Collections.sort(prty);
            for(Object temp: prty)

            {
                cloudlet_prty.add(temp);
            }

            JOptionPane.showMessageDialog(null, " Cloulets submitted to respective Brokers successfully");

            for (int i = 0; i < broker.length; i++) {
                //            System.out.println(i + " 1: " + broker[i].getCloudletList().size());
            }
            long lEndTime = new Date().getTime();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cloudlet_Create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cloudlet_Create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cloudlet_Create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cloudlet_Create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cloudlet_Create().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cloudlet;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textarea2;
    // End of variables declaration//GEN-END:variables
}
